./test_file/ILSVRC2012_val_00001000_504_336_RGB_0_1.265
=======================
Syntax elements (count = 5):
0x0: NAL_VPS
	vps_video_parameter_set_id = 0
	vps_max_layers_minus1 = 0
	vps_max_sub_layers_minus1 = 0
	vps_temporal_id_nesting_flag = 1
	profile_tier_level:
		general_profile_space = 0
		general_tier_flag = 0
		general_profile_idc = 1
		general_profile_compatibility_flag[i] = { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
		general_progressive_source_flag = 0
		general_interlaced_source_flag = 0
		general_non_packed_constraint_flag = 0
		general_frame_only_constraint_flag = 0
		general_level_idc = 63
		sub_layer_profile_present_flag = {}
		sub_layer_level_present_flag = {}
		for( i = 0; i < maxNumSubLayersMinus1; i++ )
	vps_sub_layer_ordering_info_present_flag = 1
	for( i = ( vps_sub_layer_ordering_info_present_flag ? 0 : vps_max_sub_layers_minus1 ); i <= vps_max_sub_layers_minus1; i++ )
		vps_max_dec_pic_buffering_minus1[0] = 4
		vps_max_num_reorder_pics[0] = 0
		vps_max_latency_increase_plus1[0] = 0
	vps_max_layer_id = 0
	vps_num_layer_sets_minus1 = 0
		layer_id_included_flag = { }
	vps_timing_info_present_flag = 0
	vps_extension_flag = 0

0x1d: NAL_SPS
	sps_video_parameter_set_id = 0
	sps_max_sub_layers_minus1 = 0
	sps_temporal_id_nesting_flag = 1
	profile_tier_level:
		general_profile_space = 0
		general_tier_flag = 0
		general_profile_idc = 1
		general_profile_compatibility_flag[i] = { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
		general_progressive_source_flag = 0
		general_interlaced_source_flag = 0
		general_non_packed_constraint_flag = 0
		general_frame_only_constraint_flag = 0
		general_level_idc = 63
		sub_layer_profile_present_flag = {}
		sub_layer_level_present_flag = {}
		for( i = 0; i < maxNumSubLayersMinus1; i++ )
	sps_seq_parameter_set_id = 0
	chroma_format_idc = 1
	pic_width_in_luma_samples = 504
	pic_height_in_luma_samples = 336
	conformance_window_flag = 1
	if( conformance_window_flag )
		conf_win_left_offset = 0
		conf_win_right_offset = 0
		conf_win_top_offset = 0
		conf_win_bottom_offset = 0
	bit_depth_luma_minus8 = 0
	bit_depth_chroma_minus8 = 0
	log2_max_pic_order_cnt_lsb_minus4 = 4
	sps_sub_layer_ordering_info_present_flag = 1
	for( i = ( sps_sub_layer_ordering_info_present_flag ? 0 : sps_max_sub_layers_minus1 );i <= sps_max_sub_layers_minus1; i++ )
		sps_max_dec_pic_buffering_minus1[0] = 4
		sps_max_num_reorder_pics[0] = 0
		sps_max_latency_increase_plus1[0] = 0
	log2_min_luma_coding_block_size_minus3 = 0
	log2_diff_max_min_luma_coding_block_size = 3
	log2_min_transform_block_size_minus2 = 0
	log2_diff_max_min_transform_block_size = 3
	max_transform_hierarchy_depth_inter = 2
	max_transform_hierarchy_depth_intra = 2
	scaling_list_enabled_flag = 0
	amp_enabled_flag = 1
	sample_adaptive_offset_enabled_flag = 1
	pcm_enabled_flag = 0
	num_short_term_ref_pic_sets = 14
	for( i = 0; i < num_short_term_ref_pic_sets; i++)
	short_term_ref_pic_set[0] (0):
		if( !inter_ref_pic_set_prediction_flag )
			num_negative_pics = 4
			num_positive_pics = 0
			for( i = 0; i < num_negative_pics; i++ )
				delta_poc_s0_minus1[0] = 0
				used_by_curr_pic_s0_flag[0] = 1
				delta_poc_s0_minus1[1] = 3
				used_by_curr_pic_s0_flag[1] = 1
				delta_poc_s0_minus1[2] = 3
				used_by_curr_pic_s0_flag[2] = 1
				delta_poc_s0_minus1[3] = 3
				used_by_curr_pic_s0_flag[3] = 1
		for( i = 0; i < num_positive_pics; i++ )
	short_term_ref_pic_set[1] (1):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
				used_by_curr_pic_flag [1] = 1
				used_by_curr_pic_flag [2] = 1
				used_by_curr_pic_flag [3] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [3] = 0
				used_by_curr_pic_flag [4] = 1
				used_by_curr_pic_flag [5] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [5] = 0
				used_by_curr_pic_flag [6] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [6] = 0
				used_by_curr_pic_flag [7] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [7] = 0
				used_by_curr_pic_flag [8] = 0
	short_term_ref_pic_set[2] (2):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [0] = 0
	short_term_ref_pic_set[3] (3):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [0] = 0
	short_term_ref_pic_set[4] (4):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 0
		if( !inter_ref_pic_set_prediction_flag )
			num_negative_pics = 1
			num_positive_pics = 0
			for( i = 0; i < num_negative_pics; i++ )
				delta_poc_s0_minus1[0] = 0
				used_by_curr_pic_s0_flag[0] = 1
		for( i = 0; i < num_positive_pics; i++ )
	short_term_ref_pic_set[5] (5):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
				used_by_curr_pic_flag [1] = 1
				used_by_curr_pic_flag [2] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [2] = 0
	short_term_ref_pic_set[6] (6):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[7] (7):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[8] (8):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[9] (9):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[10] (10):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[11] (11):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[12] (12):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[13] (13):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 0
		if( !inter_ref_pic_set_prediction_flag )
			num_negative_pics = 0
			num_positive_pics = 0
			for( i = 0; i < num_negative_pics; i++ )
		for( i = 0; i < num_positive_pics; i++ )
	long_term_ref_pics_present_flag = 0
	sps_temporal_mvp_enabled_flag = 1
	strong_intra_smoothing_enabled_flag = 1
	vui_parameters_present_flag = 0
	sps_extension_flag = 0

0x50: NAL_PPS
	pps_pic_parameter_set_id = 0
	pps_seq_parameter_set_id = 0
	dependent_slice_segments_enabled_flag = 0
	output_flag_present_flag = 0
	num_extra_slice_header_bits = 0
	sign_data_hiding_flag = 1
	cabac_init_present_flag = 1
	num_ref_idx_l0_default_active_minus1 = 3
	num_ref_idx_l1_default_active_minus1 = 3
	init_qp_minus26 = 0
	constrained_intra_pred_flag = 0
	transform_skip_enabled_flag = 1
	cu_qp_delta_enabled_flag = 0
	pps_cb_qp_offset = 0
	pps_cr_qp_offset = 0
	pps_slice_chroma_qp_offsets_present_flag = 0
	weighted_pred_flag = 0
	weighted_bipred_flag = 0
	transquant_bypass_enabled_flag = 0
	tiles_enabled_flag = 0
	entropy_coding_sync_enabled_flag = 0
	pps_loop_filter_across_slices_enabled_flag = 1
	deblocking_filter_control_present_flag = 0

0x5b: NAL_IDR_W_RADL
	first_slice_segment_in_pic_flag = 1
	if( nal_unit_type >= BLA_W_LP && nal_unit_type <= RSV_IRAP_VCL23 )
		no_output_of_prior_pics_flag = 0
	slice_pic_parameter_set_id = 0
	if( !dependent_slice_segment_flag )
	slice_reserved_undetermined_flag = {  }
	slice_type = 2

0x29c3e: NAL_SEI_SUFFIX
	sei_message(0)
		last_payload_type_byte = 132
		last_payload_size_byte = 49
		sei_payload( 132, 49 )

./test_file/ILSVRC2012_val_00001000_504_336_RGB_0_1.265
=======================
Syntax elements (count = 5):
0x0: NAL_VPS
	vps_video_parameter_set_id = 0
	vps_max_layers_minus1 = 0
	vps_max_sub_layers_minus1 = 0
	vps_temporal_id_nesting_flag = 1
	profile_tier_level:
		general_profile_space = 0
		general_tier_flag = 0
		general_profile_idc = 1
		general_profile_compatibility_flag[i] = { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
		general_progressive_source_flag = 0
		general_interlaced_source_flag = 0
		general_non_packed_constraint_flag = 0
		general_frame_only_constraint_flag = 0
		general_level_idc = 63
		sub_layer_profile_present_flag = {}
		sub_layer_level_present_flag = {}
		for( i = 0; i < maxNumSubLayersMinus1; i++ )
	vps_sub_layer_ordering_info_present_flag = 1
	for( i = ( vps_sub_layer_ordering_info_present_flag ? 0 : vps_max_sub_layers_minus1 ); i <= vps_max_sub_layers_minus1; i++ )
		vps_max_dec_pic_buffering_minus1[0] = 4
		vps_max_num_reorder_pics[0] = 0
		vps_max_latency_increase_plus1[0] = 0
	vps_max_layer_id = 0
	vps_num_layer_sets_minus1 = 0
		layer_id_included_flag = { }
	vps_timing_info_present_flag = 0
	vps_extension_flag = 0

0x1d: NAL_SPS
	sps_video_parameter_set_id = 0
	sps_max_sub_layers_minus1 = 0
	sps_temporal_id_nesting_flag = 1
	profile_tier_level:
		general_profile_space = 0
		general_tier_flag = 0
		general_profile_idc = 1
		general_profile_compatibility_flag[i] = { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
		general_progressive_source_flag = 0
		general_interlaced_source_flag = 0
		general_non_packed_constraint_flag = 0
		general_frame_only_constraint_flag = 0
		general_level_idc = 63
		sub_layer_profile_present_flag = {}
		sub_layer_level_present_flag = {}
		for( i = 0; i < maxNumSubLayersMinus1; i++ )
	sps_seq_parameter_set_id = 0
	chroma_format_idc = 1
	pic_width_in_luma_samples = 504
	pic_height_in_luma_samples = 336
	conformance_window_flag = 1
	if( conformance_window_flag )
		conf_win_left_offset = 0
		conf_win_right_offset = 0
		conf_win_top_offset = 0
		conf_win_bottom_offset = 0
	bit_depth_luma_minus8 = 0
	bit_depth_chroma_minus8 = 0
	log2_max_pic_order_cnt_lsb_minus4 = 4
	sps_sub_layer_ordering_info_present_flag = 1
	for( i = ( sps_sub_layer_ordering_info_present_flag ? 0 : sps_max_sub_layers_minus1 );i <= sps_max_sub_layers_minus1; i++ )
		sps_max_dec_pic_buffering_minus1[0] = 4
		sps_max_num_reorder_pics[0] = 0
		sps_max_latency_increase_plus1[0] = 0
	log2_min_luma_coding_block_size_minus3 = 0
	log2_diff_max_min_luma_coding_block_size = 3
	log2_min_transform_block_size_minus2 = 0
	log2_diff_max_min_transform_block_size = 3
	max_transform_hierarchy_depth_inter = 2
	max_transform_hierarchy_depth_intra = 2
	scaling_list_enabled_flag = 0
	amp_enabled_flag = 1
	sample_adaptive_offset_enabled_flag = 1
	pcm_enabled_flag = 0
	num_short_term_ref_pic_sets = 14
	for( i = 0; i < num_short_term_ref_pic_sets; i++)
	short_term_ref_pic_set[0] (0):
		if( !inter_ref_pic_set_prediction_flag )
			num_negative_pics = 4
			num_positive_pics = 0
			for( i = 0; i < num_negative_pics; i++ )
				delta_poc_s0_minus1[0] = 0
				used_by_curr_pic_s0_flag[0] = 1
				delta_poc_s0_minus1[1] = 3
				used_by_curr_pic_s0_flag[1] = 1
				delta_poc_s0_minus1[2] = 3
				used_by_curr_pic_s0_flag[2] = 1
				delta_poc_s0_minus1[3] = 3
				used_by_curr_pic_s0_flag[3] = 1
		for( i = 0; i < num_positive_pics; i++ )
	short_term_ref_pic_set[1] (1):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
				used_by_curr_pic_flag [1] = 1
				used_by_curr_pic_flag [2] = 1
				used_by_curr_pic_flag [3] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [3] = 0
				used_by_curr_pic_flag [4] = 1
				used_by_curr_pic_flag [5] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [5] = 0
				used_by_curr_pic_flag [6] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [6] = 0
				used_by_curr_pic_flag [7] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [7] = 0
				used_by_curr_pic_flag [8] = 0
	short_term_ref_pic_set[2] (2):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [0] = 0
	short_term_ref_pic_set[3] (3):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [0] = 0
	short_term_ref_pic_set[4] (4):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 0
		if( !inter_ref_pic_set_prediction_flag )
			num_negative_pics = 1
			num_positive_pics = 0
			for( i = 0; i < num_negative_pics; i++ )
				delta_poc_s0_minus1[0] = 0
				used_by_curr_pic_s0_flag[0] = 1
		for( i = 0; i < num_positive_pics; i++ )
	short_term_ref_pic_set[5] (5):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
				used_by_curr_pic_flag [1] = 1
				used_by_curr_pic_flag [2] = 0
				if( !used_by_curr_pic_flag[j] )
					use_delta_flag [2] = 0
	short_term_ref_pic_set[6] (6):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[7] (7):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[8] (8):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[9] (9):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[10] (10):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[11] (11):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[12] (12):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 1
		if( inter_ref_pic_set_prediction_flag )
			delta_rps_sign = 1
			abs_delta_rps_minus1 = 0
		for( j = 0; j <= NumDeltaPocs[ RefRpsIdx ]; j++ )
				used_by_curr_pic_flag [0] = 1
	short_term_ref_pic_set[13] (13):
		if( stRpsIdx != 0 )
			inter_ref_pic_set_prediction_flag = 0
		if( !inter_ref_pic_set_prediction_flag )
			num_negative_pics = 0
			num_positive_pics = 0
			for( i = 0; i < num_negative_pics; i++ )
		for( i = 0; i < num_positive_pics; i++ )
	long_term_ref_pics_present_flag = 0
	sps_temporal_mvp_enabled_flag = 1
	strong_intra_smoothing_enabled_flag = 1
	vui_parameters_present_flag = 0
	sps_extension_flag = 0

0x50: NAL_PPS
	pps_pic_parameter_set_id = 0
	pps_seq_parameter_set_id = 0
	dependent_slice_segments_enabled_flag = 0
	output_flag_present_flag = 0
	num_extra_slice_header_bits = 0
	sign_data_hiding_flag = 1
	cabac_init_present_flag = 1
	num_ref_idx_l0_default_active_minus1 = 3
	num_ref_idx_l1_default_active_minus1 = 3
	init_qp_minus26 = 0
	constrained_intra_pred_flag = 0
	transform_skip_enabled_flag = 1
	cu_qp_delta_enabled_flag = 0
	pps_cb_qp_offset = 0
	pps_cr_qp_offset = 0
	pps_slice_chroma_qp_offsets_present_flag = 0
	weighted_pred_flag = 0
	weighted_bipred_flag = 0
	transquant_bypass_enabled_flag = 0
	tiles_enabled_flag = 0
	entropy_coding_sync_enabled_flag = 0
	pps_loop_filter_across_slices_enabled_flag = 1
	deblocking_filter_control_present_flag = 0

0x5b: NAL_IDR_W_RADL
	first_slice_segment_in_pic_flag = 1
	if( nal_unit_type >= BLA_W_LP && nal_unit_type <= RSV_IRAP_VCL23 )
		no_output_of_prior_pics_flag = 0
	slice_pic_parameter_set_id = 0
	if( !dependent_slice_segment_flag )
	slice_reserved_undetermined_flag = {  }
	slice_type = 2

0x29c3e: NAL_SEI_SUFFIX
	sei_message(0)
		last_payload_type_byte = 132
		last_payload_size_byte = 49
		sei_payload( 132, 49 )

